pipeline {
    agent any

    environment {
        JAVA_VERSION = '21'
        DISCORD_WEBHOOK_DEVELOP = credentials('DISCORD_WEBHOOK_DEVELOP')
        DEV_BASE_URL = credentials('DEV_BASE_URL')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Set up JDK') {
            steps {
                tool name: 'jdk-21', type: 'jdk'
                env.JAVA_HOME = "${tool 'jdk-21'}"
                sh 'java -version'
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean install -DskipTests=true'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Notify Develop') {
            when {
                branch 'develop'
            }
            steps {
                script {
                    def commitMessage = sh(script: "git log -1 --pretty=%s", returnStdout: true).trim()
                    def commitUrl = "https://github.com/${env.JOB_NAME}/commit/${env.GIT_COMMIT}"

                    sh """
                    curl -H "Content-Type: application/json" \
                        -X POST \
                        -d '{
                            "content": "üõ†Ô∏è **Push a `develop`** en `${env.JOB_NAME}` por **${env.BUILD_USER_ID}**.\\n\\n\
                            üîó **Swagger:** ${DEV_BASE_URL}/swagger-ui.html\\n\
                            üåê **Home:** ${DEV_BASE_URL}\\n\
                            üìù **Commit:** ${commitMessage}\\n\
                            üîç [Ver commit](${commitUrl})"
                        }' \
                        ${DISCORD_WEBHOOK_DEVELOP}
                    """
                }
            }
        }

        // stage('Deploy to Railway') {
        //     steps {
        //         // Igual que en Actions, usando curl
        //     }
        // }
    }

    post {
        always {
            cleanWs()
        }
    }
}
